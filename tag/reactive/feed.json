{
    "version": "https://jsonfeed.org/version/1",
    "title": "Mawchu 貓奴前端的天空 • All posts by \"reactive\" tag",
    "description": "Mawchu 貓奴前端，為熱愛平面設計與貓咪的前端工程師 - 謝佳芳（毛球）的技術部落格，喜歡撰寫技術文章幫助自己在前端之路成長，涉及 Javascript、Vue、Laravel 與其他程式相關的討論與學習",
    "home_page_url": "http://maomaoxie.github.io",
    "items": [
        {
            "id": "http://maomaoxie.github.io/2022/11/13/zh-tw/vue3-meal-set-ref-and-reactive/",
            "url": "http://maomaoxie.github.io/2022/11/13/zh-tw/vue3-meal-set-ref-and-reactive/",
            "title": "vue3 全家桶 - ref 與 reactive 區別",
            "date_published": "2022-11-13T15:00:28.000Z",
            "content_html": "<html><head></head><body><h1 id=\"響應式數據\"><a href=\"#響應式數據\" class=\"headerlink\" title=\"響應式數據\"></a>響應式數據</h1><p>配合新的 setup 函式，偵測響應式數據的方法有 ref 與 reactive，響應式數據就是在數據變化時可以敏銳偵測到，並且隨之變動 virtual dom，達到 MVVM 的資料締結。</p>\n<h1 id=\"ref-函式\"><a href=\"#ref-函式\" class=\"headerlink\" title=\"ref 函式\"></a>ref 函式</h1><h2 id=\"取代-data-函式，返回一個代理對象\"><a href=\"#取代-data-函式，返回一個代理對象\" class=\"headerlink\" title=\"取代 data 函式，返回一個代理對象\"></a>取代 data 函式，返回一個代理對象</h2><p>ref 接受所有型別的數據，並且將資料包裝成一個代理，需要透過 <code>.value</code> 取得原始資料的數據，但須注意的是代理取得的值並非原始數據：</p>\n<figure class=\"highlight javascript hljs\"><figcaption><span>ref</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">let</span> str = <span class=\"hljs-string\">'字串'</span>;</span><br><span class=\"line\"><span class=\"hljs-keyword\">let</span> refStr = <span class=\"title function_\">ref</span>(str);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>( str === refStr.<span class=\"hljs-property\">value</span> ); <span class=\"hljs-comment\">// false</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>( refStr ); <span class=\"hljs-comment\">// 返回代理對象</span></span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"模板訪問-ref-無須透過-value\"><a href=\"#模板訪問-ref-無須透過-value\" class=\"headerlink\" title=\"模板訪問 ref 無須透過 .value\"></a>模板訪問 ref 無須透過 <code>.value</code></h2><p>在 html template 中代理數據可以直接使用變數名稱取得：</p>\n<figure class=\"highlight javascript hljs\"><figcaption><span>ref</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  &lt;h1&gt;<span class=\"title class_\">My</span> favorite food is .&lt;/h1&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">  <span class=\"hljs-keyword\">import</span> { ref } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">    setup () {</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">      <span class=\"hljs-keyword\">const</span> apple = <span class=\"title function_\">ref</span>(<span class=\"hljs-string\">'apple'</span>);</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">      <span class=\"hljs-keyword\">return</span> { apple };</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">    }</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\">  }</span></span></span><br><span class=\"line\"><span class=\"hljs-language-javascript\"><span class=\"hljs-language-xml\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></span></span><br></pre></td></tr></tbody></table></figure>\n\n<h1 id=\"reactive-函式\"><a href=\"#reactive-函式\" class=\"headerlink\" title=\"reactive 函式\"></a>reactive 函式</h1><h2 id=\"只接受-object-amp-array-形式的資料\"><a href=\"#只接受-object-amp-array-形式的資料\" class=\"headerlink\" title=\"只接受 object &amp; array 形式的資料\"></a>只接受 object &amp; array 形式的資料</h2><p>若給予 reactive 原始型別的數據，會噴錯誤訊息。</p>\n<h2 id=\"監聽深層資料變化\"><a href=\"#監聽深層資料變化\" class=\"headerlink\" title=\"監聽深層資料變化\"></a>監聽深層資料變化</h2><p>物件內部資料變化 ref 無法偵測到，不會觸發 watch 乃至重新渲染 virtual dom：</p>\n</body></html>",
            "tags": [
                "vue3",
                "ref",
                "reactive"
            ]
        }
    ]
}