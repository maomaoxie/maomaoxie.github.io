{
    "version": "https://jsonfeed.org/version/1",
    "title": "Mawchu 貓奴前端的天空 • All posts by \"setup\" tag",
    "description": "Mawchu 貓奴前端，為熱愛平面設計與貓咪的前端工程師 - 謝佳芳（毛球）的技術部落格，喜歡撰寫技術文章幫助自己在前端之路成長，涉及 Javascript、Vue、Laravel 與其他程式相關的討論與學習",
    "home_page_url": "http://maomaoxie.github.io",
    "items": [
        {
            "id": "http://maomaoxie.github.io/2022/11/13/zh-tw/vue3-meal-set-composition-api/",
            "url": "http://maomaoxie.github.io/2022/11/13/zh-tw/vue3-meal-set-composition-api/",
            "title": "vue3 全家桶 - 理解組件化（composition API）",
            "date_published": "2022-11-13T13:22:31.000Z",
            "content_html": "<html><head></head><body><h1 id=\"compostion-的意義\"><a href=\"#compostion-的意義\" class=\"headerlink\" title=\"compostion 的意義\"></a>compostion 的意義</h1><p>先講結論，composition API 是為了最大程度複用程式碼而誕生的資料結構寫法，<br>composition 顧名思義組件化就是要自由的拆分然後根據需求重新模組化複用。</p>\n<p>之前的<a href=\"/2022/02/16/zh-tw/vue3-composition-api/\">這篇文章</a>有簡約提到 vue 3 變革的初探，本篇來延伸說明一下 composition API 背後的輪廓，<br>概念是根據 udemy <strong>Vue 3.x全家桶完全指南与实战</strong>課程：</p>\n<h1 id=\"options-API-v-s-composition-API\"><a href=\"#options-API-v-s-composition-API\" class=\"headerlink\" title=\"options API v.s. composition API\"></a>options API v.s. composition API</h1><h2 id=\"options-API\"><a href=\"#options-API\" class=\"headerlink\" title=\"options API\"></a>options API</h2><p>選項 API 是 vue 既有的一種模組資料分類方式，透過 <code>export default</code> 將資料模組化黏著至 vue 實體，<br>結構如下：</p>\n<ol>\n<li>data - 一般資料變數</li>\n<li>computed - 計算屬性資料</li>\n<li>methods - 函式方法</li>\n<li>watch - 監聽資料變化</li>\n</ol>\n<figure class=\"highlight javascript hljs\"><figcaption><span>options API</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {</span><br><span class=\"line\">  data () {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"hljs-attr\">computed</span>: {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"hljs-attr\">methods</span>: {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"hljs-attr\">watch</span>: {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h2 id=\"composition-API\"><a href=\"#composition-API\" class=\"headerlink\" title=\"composition API\"></a>composition API</h2><p>組件 API 顧名思義將模組的資料「組件化」，並且背後的命名空間（name space）區分同名的資料與函式，<br>使同一部件內的資料可以用 <code>setup</code> 方法統合整理在一起，寫法範例：</p>\n<figure class=\"highlight javascript hljs\"><figcaption><span>composition API</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {</span><br><span class=\"line\">  setup () {</span><br><span class=\"line\">    <span class=\"hljs-keyword\">const</span> data = <span class=\"title function_\">ref</span>(<span class=\"hljs-number\">0</span>);</span><br><span class=\"line\">    <span class=\"hljs-keyword\">const</span> computedData = <span class=\"title function_\">computed</span>(<span class=\"hljs-function\">() =&gt;</span> ...);</span><br><span class=\"line\">    <span class=\"hljs-keyword\">function</span> <span class=\"title function_\">getToday</span> () {</span><br><span class=\"line\">      ...</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"title function_\">watch</span>(data, <span class=\"hljs-function\">(<span class=\"hljs-params\">newVal, oldVal</span>) =&gt;</span> {</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data.<span class=\"hljs-property\">value</span>, newVal, oldVal);</span><br><span class=\"line\">    })</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h3 id=\"與-options-API-共存\"><a href=\"#與-options-API-共存\" class=\"headerlink\" title=\"與 options API 共存\"></a>與 options API 共存</h3><p>composition API 運用命名空間分化了模組各自的片段功能與資料，並且可與 options API 共存</p>\n<h3 id=\"外部獨立後匯入-Vue-實體\"><a href=\"#外部獨立後匯入-Vue-實體\" class=\"headerlink\" title=\"外部獨立後匯入 Vue 實體\"></a>外部獨立後匯入 Vue 實體</h3><p>統整功能與頁面上可以將部分的功能與資料獨立成一個檔案後，匯入模組中：</p>\n<figure class=\"highlight javascript hljs\"><figcaption><span>module A</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">import</span> { ref, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;</span><br><span class=\"line\"><span class=\"hljs-keyword\">function</span> <span class=\"title function_\">moduleFnA</span> () {</span><br><span class=\"line\">  <span class=\"hljs-keyword\">const</span> data = <span class=\"title function_\">ref</span>(<span class=\"hljs-number\">0</span>);</span><br><span class=\"line\">  <span class=\"hljs-keyword\">const</span> computedData = <span class=\"title function_\">computed</span>(<span class=\"hljs-function\">() =&gt;</span> ...);</span><br><span class=\"line\">  <span class=\"hljs-keyword\">function</span> <span class=\"title function_\">getToday</span> () {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"hljs-keyword\">return</span> data; <span class=\"hljs-comment\">// 返回值可以為 vue 命名空間區分變數</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> moduleFnA;</span><br></pre></td></tr></tbody></table></figure>\n\n<figure class=\"highlight javascript hljs\"><figcaption><span>moduleB</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">import</span> { ref, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;</span><br><span class=\"line\"><span class=\"hljs-keyword\">function</span> <span class=\"title function_\">moduleFnB</span> () {</span><br><span class=\"line\">  <span class=\"hljs-keyword\">const</span> data = <span class=\"title function_\">ref</span>(<span class=\"hljs-number\">0</span>);</span><br><span class=\"line\">  <span class=\"hljs-keyword\">const</span> computedData = <span class=\"title function_\">computed</span>(<span class=\"hljs-function\">() =&gt;</span> ...);</span><br><span class=\"line\">  <span class=\"hljs-keyword\">function</span> <span class=\"title function_\">getToday</span> () {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"hljs-keyword\">return</span> data; <span class=\"hljs-comment\">// 返回值可以為 vue 命名空間區分變數</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> moduleFnB;</span><br></pre></td></tr></tbody></table></figure>\n\n<figure class=\"highlight javascript hljs\"><figcaption><span>importToVue</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-keyword\">import</span> { ref, computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;</span><br><span class=\"line\"><span class=\"hljs-keyword\">import</span> moduleFnA <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./moduleFnA.js'</span>;</span><br><span class=\"line\"><span class=\"hljs-keyword\">import</span> moduleFnB <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./moduleFnB.js'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {</span><br><span class=\"line\">  setup () {</span><br><span class=\"line\">    ... 開始使用 moduleFnA, moduleFnB</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n\n<h1 id=\"Mixins-缺陷\"><a href=\"#Mixins-缺陷\" class=\"headerlink\" title=\"Mixins 缺陷\"></a>Mixins 缺陷</h1><h3 id=\"配置分散\"><a href=\"#配置分散\" class=\"headerlink\" title=\"配置分散\"></a>配置分散</h3><p>同一功能分散在不同配置項中（data, computed, method …），也無法得知各自更新的內容；</p>\n<h3 id=\"變數名稱沒有區分\"><a href=\"#變數名稱沒有區分\" class=\"headerlink\" title=\"變數名稱沒有區分\"></a>變數名稱沒有區分</h3><p>由於命名的作用域相同，同名屬性會互相覆蓋。</p>\n<h4 id=\"composition-return\"><a href=\"#composition-return\" class=\"headerlink\" title=\"composition return\"></a>composition return</h4><p>composition API 的返回值可以為命名空間區分變數名，為 vue 動態的根據模組添加。</p>\n</body></html>",
            "tags": [
                "vue3",
                "compositionApi",
                "setup"
            ]
        }
    ]
}